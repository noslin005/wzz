# setreuid ___________________________________________________
# long sys_setreuid(uid_t ruid, uid_t euid)
#

@define _SYSCALL_SETREUID_NAME
%(
	name = "setreuid"
%)

@define _SYSCALL_SETREUID_ARGSTR
%(
	argstr = sprintf("%d, %d", ruid, euid)
%)

probe syscall.setreuid = dw_syscall.setreuid !, nd_syscall.setreuid ? {}
probe syscall.setreuid.return = dw_syscall.setreuid.return !,
                                nd_syscall.setreuid.return ? {}

# dw_setreuid _____________________________________________________

probe dw_syscall.setreuid = kernel.function("sys_setreuid").call
{
	@_SYSCALL_SETREUID_NAME
	ruid = __int32($ruid)
	euid = __int32($euid)
	@_SYSCALL_SETREUID_ARGSTR
}
probe dw_syscall.setreuid.return = kernel.function("sys_setreuid").return
{
	@_SYSCALL_SETREUID_NAME
	retstr = return_str(1, $return)
}

# nd_setreuid _____________________________________________________

probe nd_syscall.setreuid = kprobe.function("sys_setreuid") ?
{
	@_SYSCALL_SETREUID_NAME
	asmlinkage()
	ruid = __int32(uint_arg(1))
	euid = __int32(uint_arg(2))
	@_SYSCALL_SETREUID_ARGSTR
}
probe nd_syscall.setreuid.return = kprobe.function("sys_setreuid").return ?
{
	@_SYSCALL_SETREUID_NAME
	retstr = returnstr(1)
}

# setreuid16 _________________________________________________
# long sys_setreuid16(old_uid_t ruid, old_uid_t euid)
#

probe syscall.setreuid16 = dw_syscall.setreuid16 !, nd_syscall.setreuid16 ? {}
probe syscall.setreuid16.return = dw_syscall.setreuid16.return !,
                                  nd_syscall.setreuid16.return ? {}

# dw_setreuid16 _____________________________________________________

probe dw_syscall.setreuid16 = kernel.function("sys_setreuid16").call ?
{
	@_SYSCALL_SETREUID_NAME
	ruid = __short($ruid)
	euid = __short($euid)
	@_SYSCALL_SETREUID_ARGSTR
}
probe dw_syscall.setreuid16.return = kernel.function("sys_setreuid16").return ?
{
	@_SYSCALL_SETREUID_NAME
	retstr = return_str(1, $return)
}

# nd_setreuid16 _____________________________________________________

probe nd_syscall.setreuid16 = kprobe.function("sys_setreuid16") ?
{
	@_SYSCALL_SETREUID_NAME
	asmlinkage()
	ruid = __short(uint_arg(1))
	euid = __short(uint_arg(2))
	@_SYSCALL_SETREUID_ARGSTR
}
probe nd_syscall.setreuid16.return = kprobe.function("sys_setreuid16").return ?
{
	@_SYSCALL_SETREUID_NAME
	retstr = returnstr(1)
}
